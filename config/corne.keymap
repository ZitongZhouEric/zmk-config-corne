/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB     &kp Q  &kp W  &kp E     &kp R  &kp T        &kp Y    &kp U  &kp I      &kp O    &kp P     &kp BSPC
&kp LSHIFT  &kp A  &kp S  &kp D     &kp F  &kp G        &kp H    &kp J  &kp K      &kp L    &kp SEMI  &kp SQT
&kp LCTRL   &kp Z  &kp X  &kp C     &kp V  &kp B        &kp N    &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp ESC
                          &kp RGUI  &mo 1  &kp SPACE    &kp RET  &mo 2  &kp RALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB     &kp N1  &kp N2  &kp N3    &kp N4  &kp N5       &kp N6   &kp N7  &kp N8    &kp N9  &kp N0  &kp BSPC
&kp LSHIFT  &none   &none   &none     &none   &none        &none    &kp N4  &kp N5    &kp N6  &none   &kp PG_UP
&kp LCTRL   &none   &none   &none     &none   &none        &kp N0   &kp N1  &kp N2    &kp N3  &none   &kp PG_DN
                            &kp RGUI  &to 0   &kp SPACE    &kp RET  &mo 3   &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp EXCL  &kp AT    &kp HASH  &kp DLLR   &kp PRCNT    &kp CARET  &kp AMPS   &kp KP_MULTIPLY  &kp LPAR  &kp RPAR      &kp BSPC
&kp LSHFT  &none     &none     &kp UP    &none      &none        &kp MINUS  &kp EQUAL  &kp LBKT         &kp RBKT  &kp BSLH      &kp GRAVE
&kp LCTRL  &none     &kp LEFT  &kp DOWN  &kp RIGHT  &none        &kp UNDER  &kp PLUS   &kp LBRC         &kp RBRC  &kp QUESTION  &kp TILDE
                               &kp RGUI  &mo 3      &kp SPACE    &kp RET    &to 0      &kp RALT
            >;
        };

        layer_3 {
            bindings = <
&kp TAB    &none  &none       &kp F4            &kp F11            &none        &kp C_SLEEP_MODE  &none  &none     &none  &none  &none
&kp LSHFT  &none  &kp C_NEXT  &kp C_PLAY_PAUSE  &kp C_VOLUME_UP    &none        &none             &none  &none     &none  &none  &none
&kp LCTRL  &none  &kp C_PREV  &kp C_STOP        &kp C_VOLUME_DOWN  &none        &none             &none  &none     &none  &none  &none
                              &kp RGUI          &to 0              &kp SPACE    &kp RET           &to 0  &kp RALT
            >;
        };
    };
};
